/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bank;

/**
 *
 * @author OSAMA
 */
import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import java.util.Random;

public class Account extends javax.swing.JFrame {
    Connection conn;
    ResultSet rs;
    PreparedStatement pst;

    /** Creates new form Account */
    public Account() {
        initComponents();
        conn = JavaConnect.connectDb();
        ImageIcon icon = new ImageIcon("E:\\JAVA PROGRAMMING\\BRO CODE TUTORIAL\\Banking\\src\\main\\java\\images\\top icon.png");
        this.setIconImage(icon.getImage());
        randomAcc();
        randomPin();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        amountTextField = new javax.swing.JTextField();
        dateOfBirthDateChooser = new com.toedter.calendar.JDateChooser();
        maleRadioButton = new javax.swing.JRadioButton();
        religionComboBox = new javax.swing.JComboBox<>();
        createButton = new javax.swing.JButton();
        answerTextField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        answerLabel = new javax.swing.JLabel();
        pinLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        securityQLabel = new javax.swing.JLabel();
        accountTypeLabel = new javax.swing.JLabel();
        accountTypeComboBox = new javax.swing.JComboBox<>();
        phoneLabel = new javax.swing.JLabel();
        pinTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        femaleRadioButton = new javax.swing.JRadioButton();
        dateOfBirthLabel = new javax.swing.JLabel();
        accountNoLabel = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        religionLabel = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        phoneTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        accountNoTextField = new javax.swing.JTextField();
        securityQComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OU Bank Management System - Create Account");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Create Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 28), new java.awt.Color(255, 51, 51))); // NOI18N

        amountTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        dateOfBirthDateChooser.setDateFormatString("dd-MM-yyyy");
        dateOfBirthDateChooser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateOfBirthDateChooser.setPreferredSize(new java.awt.Dimension(88, 21));

        buttonGroup1.add(maleRadioButton);
        maleRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maleRadioButton.setText("Male");

        religionComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        religionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Muslim", "Christian", "Hindu", "Other" }));

        createButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        answerTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addressLabel.setText("Address");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nameLabel.setText("Name");

        answerLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        answerLabel.setText("Answer");

        pinLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pinLabel.setText("Pin");

        genderLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderLabel.setText("Gender");

        securityQLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        securityQLabel.setText("Security Q.");

        accountTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        accountTypeLabel.setText("Account Type");

        accountTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        accountTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Saving", "Current" }));

        phoneLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        phoneLabel.setText("Phone");

        pinTextField.setEditable(false);
        pinTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pinTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinTextFieldActionPerformed(evt);
            }
        });

        nameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        buttonGroup1.add(femaleRadioButton);
        femaleRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        femaleRadioButton.setText("Female");

        dateOfBirthLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateOfBirthLabel.setText("Date Of Birth");

        accountNoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        accountNoLabel.setText("Account No.");

        amountLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        amountLabel.setText("Amount");

        religionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        religionLabel.setText("Religion");

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        phoneTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        addressTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        accountNoTextField.setEditable(false);
        accountNoTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        securityQComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        securityQComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "What is your nickname?", "What is your mother's maiden name?" }));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel1Layout.createSequentialGroup()
                                    .add(nameLabel)
                                    .add(72, 72, 72))
                                .add(jPanel1Layout.createSequentialGroup()
                                    .add(dateOfBirthLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(genderLabel)
                                .add(63, 63, 63)))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(nameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(15, 15, 15)
                                .add(maleRadioButton)
                                .add(26, 26, 26)
                                .add(femaleRadioButton))
                            .add(dateOfBirthDateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(phoneLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(addressLabel)
                            .add(religionLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(religionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(addressTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(phoneTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(108, 108, 108)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(accountNoLabel)
                            .add(pinLabel))
                        .add(27, 27, 27))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(securityQLabel)
                                .add(accountTypeLabel))
                            .add(18, 18, 18))
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(56, 56, 56)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(amountLabel)
                                .add(answerLabel))
                            .add(55, 55, 55))))
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, accountNoTextField)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pinTextField)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, answerTextField)
                    .add(accountTypeComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(amountTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, securityQComboBox, 0, 1, Short.MAX_VALUE))
                .addContainerGap())
            .add(jPanel1Layout.createSequentialGroup()
                .add(157, 157, 157)
                .add(createButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(80, 80, 80)
                .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(80, 80, 80)
                .add(clearButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(nameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(nameLabel))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(dateOfBirthLabel)
                            .add(dateOfBirthDateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(genderLabel)
                            .add(maleRadioButton)
                            .add(femaleRadioButton))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(religionLabel)
                            .add(religionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(phoneLabel)
                            .add(phoneTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(accountNoTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(accountNoLabel))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(pinTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pinLabel))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(accountTypeLabel)
                            .add(accountTypeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(securityQLabel)
                            .add(securityQComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(answerLabel)
                            .add(answerTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addressTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(addressLabel)
                    .add(amountLabel)
                    .add(amountTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 46, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(backButton)
                    .add(createButton)
                    .add(clearButton))
                .add(38, 38, 38))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("E:\\JAVA PROGRAMMING\\BRO CODE TUTORIAL\\Banking\\src\\main\\java\\images\\main.png")); // NOI18N
        jLabel1.setText("OU Bank Mangement System");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(174, 174, 174)
                .add(jLabel1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 28, Short.MAX_VALUE)
                .add(jLabel1)
                .add(26, 26, 26)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void randomAcc() {
//        accountNoTextField.setText(""+ra.nextInt(10000+1));
        Random random = new Random();
        String numbers = "0123456789";
        String temp = "";
        while(true) {
            for(int i=0; i<8; i++) {
                temp += numbers.charAt(random.nextInt(numbers.length()));
            }
            String sql = "select * from Account where Acc=?";
            try {
                pst = conn.prepareStatement(sql);
                pst.setString(1, temp);
                rs = pst.executeQuery();
                if (rs.next()) {
                    rs.close();
                    pst.close();
//                    continue;
                }
                else {
                    accountNoTextField.setText(temp);
                    rs.close();
                    pst.close();
                    break;
                }
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, e);
                e.printStackTrace();
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch(Exception e) {}
            }
        }
    }
    private void randomPin() {
//        pinTextField.setText(""+ra.nextInt(1000+1));
        Random random = new Random();
        String numbers = "0123456789";
        String temp = "";
        for(int i=0; i<4; i++) {
            temp += numbers.charAt(random.nextInt(numbers.length()));
        }
        pinTextField.setText(temp);
    }
    
    public void Bal() {
        String a = amountTextField.getText();
        int b = Integer.parseInt(a);
        
        String sql = "insert into BalancesHistory(Sender,Receiver,Amount,Timestamp) values (?,?,?,?)"; //('"+nameTextField.getText()+"','"+(int)accountNoTextField.getText()+"','"+(int)amountTextField.getText()+"'";
        try {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();
            String dateTime = dtf.format(now);
            String val1 = "Human";
            String val2 = accountNoTextField.getText();
            String val3 = amountTextField.getText();
            pst = conn.prepareStatement(sql);
            pst.setString(1, val1);
            pst.setString(2, val2);
            pst.setString(3, val3);
            pst.setString(4, dateTime);
//            pst.setInt(2, Integer.parseInt(accountNoTextField.getText()));
//            pst.setInt(3, Integer.parseInt(amountTextField.getText()));
            pst.execute();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }
    }
    
    private void goBack() {
        setVisible(false);
        Authentication obj = new Authentication();
        obj.setVisible(true);
    }
    
    private void pinTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pinTextFieldActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        nameTextField.setText("");
        dateOfBirthDateChooser.setCalendar(null);
        buttonGroup1.clearSelection();
        religionComboBox.setSelectedIndex(0);
        phoneTextField.setText("");
        addressTextField.setText("");
        accountTypeComboBox.setSelectedIndex(0);
        securityQComboBox.setSelectedIndex(0);
        answerTextField.setText("");
        amountTextField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_backButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        String sql = "insert into Account(Acc,Name,DOB,Pin,Acc_Type,Religion,Gender,Phone,Address,Sec_Q,Sec_A,Balance) values (?,?,?,?,?,?,?,?,?,?,?,?)";
        try {
//            pst = conn.prepareStatement(sql);
//            pst.setInt(1, Integer.parseInt(accountNoTextField.getText()));
//            pst.setString(2, nameTextField.getText());
//            pst.setString(3, ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText());
//            pst.setInt(4, Integer.parseInt(pinTextField.getText()));
//            pst.setString(5, (String)accountTypeComboBox.getSelectedItem());
//            pst.setString(6, (String)religionComboBox.getSelectedItem());
//            
//            maleRadioButton.setActionCommand("Male");
//            femaleRadioButton.setActionCommand("Female");
//            pst.setString(7, buttonGroup1.getSelection().getActionCommand());
//            
//            pst.setLong(8, Long.parseLong(phoneTextField.getText()));
//            pst.setString(9, addressTextField.getText());
//            
//            pst.setString(10, (String)securityQComboBox.getSelectedItem());
//            pst.setString(11, answerTextField.getText());
//            pst.setInt(12, Integer.parseInt(amountTextField.getText()));
//            pst.execute();
//            pst.close();
            pst = conn.prepareStatement(sql);
            pst.setString(1, accountNoTextField.getText());
            pst.setString(2, nameTextField.getText());
            pst.setString(3, ((JTextField)dateOfBirthDateChooser.getDateEditor().getUiComponent()).getText());
            pst.setString(4, pinTextField.getText());
            pst.setString(5, (String)accountTypeComboBox.getSelectedItem());
            pst.setString(6, (String)religionComboBox.getSelectedItem());
            
            maleRadioButton.setActionCommand("Male");
            femaleRadioButton.setActionCommand("Female");
            pst.setString(7, buttonGroup1.getSelection().getActionCommand());
            
            pst.setString(8, phoneTextField.getText());
            pst.setString(9, addressTextField.getText());
            
            pst.setString(10, (String)securityQComboBox.getSelectedItem());
            pst.setString(11, answerTextField.getText());
            pst.setString(12, amountTextField.getText());
            pst.execute();
            pst.close();
            Bal();
            JOptionPane.showMessageDialog(null, "Congratulations!\nYour account has been created.");
            goBack();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_createButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Account().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountNoLabel;
    private javax.swing.JTextField accountNoTextField;
    private javax.swing.JComboBox<String> accountTypeComboBox;
    private javax.swing.JLabel accountTypeLabel;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JLabel answerLabel;
    private javax.swing.JTextField answerTextField;
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton createButton;
    private com.toedter.calendar.JDateChooser dateOfBirthDateChooser;
    private javax.swing.JLabel dateOfBirthLabel;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JLabel pinLabel;
    private javax.swing.JTextField pinTextField;
    private javax.swing.JComboBox<String> religionComboBox;
    private javax.swing.JLabel religionLabel;
    private javax.swing.JComboBox<String> securityQComboBox;
    private javax.swing.JLabel securityQLabel;
    // End of variables declaration//GEN-END:variables
    
}
